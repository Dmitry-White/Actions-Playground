name: Python Lambda Pipeline

on:
  push:
    branches:
      - main

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11.0

      - name: Install linter library
        run: |
          cd src/
          pip install flake8

      - name: Use linter library
        run: |
          cd src/
          flake8 . --count --statistics --select=E9,F63,F7,F82 --show-source
          flake8 . --count --statistics --exit-zero --max-complexity=10 --max-line-length=127

  build:
    name: Build Code
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11.0

      - name: Install dependencies
        run: |
          cd src/
          pip install -r requirements.txt -t .

      - name: Bundle code into a Build Artifact
        run: |
          cd src/
          sudo apt update
          sudo apt upgrade -y
          sudo apt-get install zip -y
          zip -r ../${{ github.sha }}.zip .

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: ${{ github.sha }}.zip

  publish:
    name: Publish Code
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          body: New release for ${{ github.sha }}. War, war never changes.
          draft: false
          prerelease: false

      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: build-artifact

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ github.sha }}.zip
          asset_name: source_code_with_dependencies.zip
          asset_content_type: application/zip
